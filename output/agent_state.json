{
    "query": "من یه کامپوننت برای لاگین وبسایتم میخوام که نام کاربری و رمز بگیره و گزینه فراموشی رمز هم داشته باشه",
    "context": "Element (ALERT): The Alert component is a customizable alert component built on top of MUI's Alert component, and use from Alert component of MUI. It maintains a consistent appearance with a contained variant and customizable styles via props. .\nElement (BUTTON): The Button component is a customizable button built on top of MUI's Button component, designed for use throughout the application. It maintains a consistent appearance with a contained variant and customizable styles via props, making it a versatile and reusable button component. This component used instead of button tag in the application. .\nElement (CARD_ELEMENT): The card element is component for map in any list of data and show it in card view. in the provider is Grid component from material-ui and in the children is the data that we want to show in card view. .\nElement (CHECK_BOX): The CheckBox component is a customizable checkbox built on top of MUI's Checkbox component, designed for use throughout the application. .\nElement (COLUMN_CHART): The Column Chart component is a customizable 3D chart built on top of ApexCharts, this chart in 3D and can use it to show data in 3D. .\nElement (DATE_PANEL): The DataPaned is a date picker component built on top of Mui/x-data-grid's DatePicker component, and use for date jalaali or ... date picker. .\nElement (DIV): The Div component is a customizable div built on top of HTML's div element, this use Grid system from MUI and can use it to show data in div. and use instead of div or span or ui or li or ... in your project..\nElement (DIVIDER): The Divider component is a customizable divider built on top of MUI's Divider component, it can be use separate content in the page. .\nElement (DROP_DOWN_LIST): The DropDownList component is a customizable dropdown built on top of MUI's AutoComplete component, it can be use to select one item from a list of items. .\nElement (FILE_BROWSER): The FileBrowser component is a simple customizable file browser, this component is simple and user can be upload one file. .\nElement (FORM_LOADER): The FormLoader is a component of form provider of package react-hook-form, and used in wrapper of any form in my application. .\nElement (HEADER_FIELD): The HeaderField component is a customizable header field, this component is wrapper of section element with title and can be seprate content in many segment. .\nElement (HTML_EDITOR): The HtmlEditor component is Box input that user can be write html code in it. .\nElement (HYPER_LINK): The HyperLink component is a simple customizable hyperlink, this component used instead of <a></a> or any Link tag in the application. .\nElement (ICON): The Icon is component can used only for icon react-icons library. and anywhere user want to use icon in the application only need to use this component and icons in react-icons library. .\nElement (ICON_BUTTON): The IconButton component is mui button with icon, this component is simple and user can be use it in the application. the icon of this component is from react-icons library and Icon element. .\nElement (IMAGE_BOX): The ImageBox component is a simple customizable image box, this component used instead of <img></img> tag in the application. .\nElement (LAYOUT): The Layout component is a simple customizable layout, it used Grid component from MUI to create a layout in the application. and can be used xs (extra small), sm (small), md (medium), lg (large), xl (extra large) screen sizes. and only used Element LayoutRow in children. attr container, default is true and can not be change.\nElement (LAYOUT_CELL): The LayoutCell component is a simple customizable layout, it used Grid component from MUI to create a layout in the application. and can be used xs (extra small), sm (small), md (medium), lg (large), xl (extra large) screen sizes.attr item, default is true and can not be change .\nElement (LAYOUT_ROW): The LayoutRow component is a simple customizable layout, it used Grid component from MUI to create a layout in the application. and can be used xs (extra small), sm (small), md (medium), lg (large), xl (extra large) screen sizes. and only used Element LayoutCell in children.attr container and item, default is true and can not be change. always xs is 12.\nElement (LOADING): The Loading component is a customizable loading built on top of MUI's CircularProgress component, it can be use to show loading in the page. .\nElement (MENU): The Menu component is a customizable menu built on top of @radix-ui/react-menubar's Menu component, it can be use to show menu in the page. and data is attibute not children element. .\nElement (MODAL): The Modal component is a customizable modal built on top of MUI's Dialog component, it can be use to show a modal in the page. .\nElement (MULTI_FILE_BROWSER): The MultiFileBrowser component is a advance customizable file browser , and user can upload multiple files and drag and drop files in the file browser. .\nElement (PIE_CHART): The PiChart component is a customizable 2D chart built on top of ApexCharts, this chart in 2D and can use it to show data in 2D. .\nElement (RADIO_LIST): The RadioList component is a customizable radio list built on top of MUI's RadioGroup component, it can be use to select one item from a list of items. .\nElement (STEPER_CONTAINER): The StepperContainer component is a customizable stepper container built on top of MUI's Stepper component, it can be use to show a stepper in the page. and only can used StepperElement component as children..\nElement (STEPER_ELEMENT): The StepperElement component is a customizable stepper element built on top of MUI's Step component, this component is for each step in the StepperContainer component. each of StepperElement has one Trigger and one Content.\nElement (SWITCH): The Switch component is a customizable switch built on top of MUI's Switch component, it can be used for toggle on/off the switch. .\nElement (TAB_CONTAINER): The TabConatiner component is a customizable tab container built on top of @radix-ui/react-tabs's TabConatiner component, it can be use to show a tab in the page. and only can used TabElement component as children..\nElement (TAB_ELEMENT): The TabElement component is a customizable tab element built on top of @radix-ui/react-tabs's Tab component, this component is for each tab in the TabContainer component. each of TabElement has one Trigger and one Content.\nElement (TAG_BOX_INPUT): The TagBoxInput component is a customizable tag box input built on top of MUI's AutoComplete component, this component is like of DropDown Element and used AutoComplete but in this component user can be select from a list or type a new tag and add it to the list of tags. .\nElement (TEXT_BOX): The TextBox component is a customizable text box built on top of MUI's TextField component, it can be used for input text in the form. .\nElement (TIME_PICKER): The TimePicker component is a customizable time picker built on top of @mui/x-date-pickers's TimePicker component, it can be used for select time in the application. .\nElement (TOOLTIP): The Tooltip component is a customizable tooltip built on top of MUI's Tooltip component, it can be used to show a tooltip when the user hovers over the element. .\nElement (TYPOGRAPHY): The Typography component is a customizable text component built on top of MUI's Typography component, this component used for any text in the application. .",
    "finalResult": {
        "title": "Login Component",
        "description": "A reusable login component with username, password, and forgot password link.",
        "category": "Authentication",
        "version": "1.0.0",
        "isReusable": true,
        "states": [
            {
                "name": "username",
                "defaultValue": "",
                "type": "STRING"
            },
            {
                "name": "password",
                "defaultValue": "",
                "type": "STRING"
            }
        ],
        "props": [],
        "functions": [
            {
                "name": "handleLogin",
                "inputParams": [],
                "code": "console.log(\"Username:\", username); console.log(\"Password:\", password);"
            }
        ],
        "jsxCode": "<FORM_LOADER>\n  <LAYOUT>\n    <LAYOUT_ROW>\n      <LAYOUT_CELL>\n        <TYPOGRAPHY variant=\"h5\" align=\"center\">\n          ورود به حساب کاربری\n        </TYPOGRAPHY>\n      </LAYOUT_CELL>\n    </LAYOUT_ROW>\n    <LAYOUT_ROW>\n      <LAYOUT_CELL>\n        <TEXT_BOX\n          label=\"نام کاربری\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          fullWidth\n        />\n      </LAYOUT_CELL>\n    </LAYOUT_ROW>\n    <LAYOUT_ROW>\n      <LAYOUT_CELL>\n        <TEXT_BOX\n          label=\"رمز عبور\"\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          fullWidth\n        />\n      </LAYOUT_CELL>\n    </LAYOUT_ROW>\n    <LAYOUT_ROW>\n      <LAYOUT_CELL>\n        <BUTTON onClick={handleLogin} fullWidth>\n          ورود\n        </BUTTON>\n      </LAYOUT_CELL>\n    </LAYOUT_ROW>\n    <LAYOUT_ROW>\n      <LAYOUT_CELL>\n        <HYPER_LINK href=\"/forgot-password\" align=\"center\">\n          فراموشی رمز عبور؟\n        </HYPER_LINK>\n      </LAYOUT_CELL>\n    </LAYOUT_ROW>\n  </LAYOUT>\n</FORM_LOADER>",
        "componentCode": "",
        "elementTypes": []
    },
    "config": {
        "accessGenerate": [
            "FULL"
        ],
        "language": "fa"
    },
    "jsxNodes": {
        "elementType": "FORM_LOADER",
        "attributes": [],
        "styles": [],
        "events": [],
        "children": [
            {
                "elementType": "LAYOUT",
                "attributes": [],
                "styles": [],
                "events": [],
                "children": [
                    {
                        "elementType": "LAYOUT_ROW",
                        "attributes": [],
                        "styles": [],
                        "events": [],
                        "children": [
                            {
                                "elementType": "LAYOUT_CELL",
                                "attributes": [],
                                "styles": [],
                                "events": [],
                                "children": [
                                    {
                                        "elementType": "TYPOGRAPHY",
                                        "attributes": [
                                            {
                                                "name": "variant",
                                                "type": "STATIC",
                                                "valueType": "STRING",
                                                "content": "h5"
                                            },
                                            {
                                                "name": "align",
                                                "type": "STATIC",
                                                "valueType": "STRING",
                                                "content": "center"
                                            }
                                        ],
                                        "styles": [],
                                        "events": [],
                                        "children": [
                                            "ورود به حساب کاربری"
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "elementType": "LAYOUT_ROW",
                        "attributes": [],
                        "styles": [],
                        "events": [],
                        "children": [
                            {
                                "elementType": "LAYOUT_CELL",
                                "attributes": [],
                                "styles": [],
                                "events": [],
                                "children": [
                                    {
                                        "elementType": "TEXT_BOX",
                                        "attributes": [
                                            {
                                                "name": "label",
                                                "type": "STATIC",
                                                "valueType": "STRING",
                                                "content": "نام کاربری"
                                            },
                                            {
                                                "name": "value",
                                                "type": "DYNAMIC",
                                                "valueType": "STRING",
                                                "content": "username"
                                            },
                                            {
                                                "name": "fullWidth",
                                                "type": "STATIC",
                                                "valueType": "BOOLEAN",
                                                "content": true
                                            }
                                        ],
                                        "events": [
                                            {
                                                "name": "onChange",
                                                "type": "ON_CHANGE",
                                                "eventItems": [
                                                    {
                                                        "name": "SET_STATE",
                                                        "stateName": "username",
                                                        "paramterList": [
                                                            {
                                                                "name": "value",
                                                                "type": "DYNAMIC",
                                                                "valueType": "STRING",
                                                                "content": "e.target.value"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "elementType": "LAYOUT_ROW",
                        "attributes": [],
                        "styles": [],
                        "events": [],
                        "children": [
                            {
                                "elementType": "LAYOUT_CELL",
                                "attributes": [],
                                "styles": [],
                                "events": [],
                                "children": [
                                    {
                                        "elementType": "TEXT_BOX",
                                        "attributes": [
                                            {
                                                "name": "label",
                                                "type": "STATIC",
                                                "valueType": "STRING",
                                                "content": "رمز عبور"
                                            },
                                            {
                                                "name": "type",
                                                "type": "STATIC",
                                                "valueType": "STRING",
                                                "content": "password"
                                            },
                                            {
                                                "name": "value",
                                                "type": "DYNAMIC",
                                                "valueType": "STRING",
                                                "content": "password"
                                            },
                                            {
                                                "name": "fullWidth",
                                                "type": "STATIC",
                                                "valueType": "BOOLEAN",
                                                "content": true
                                            }
                                        ],
                                        "events": [
                                            {
                                                "name": "onChange",
                                                "type": "ON_CHANGE",
                                                "eventItems": [
                                                    {
                                                        "name": "SET_STATE",
                                                        "stateName": "password",
                                                        "paramterList": [
                                                            {
                                                                "name": "value",
                                                                "type": "DYNAMIC",
                                                                "valueType": "STRING",
                                                                "content": "e.target.value"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "elementType": "LAYOUT_ROW",
                        "attributes": [],
                        "styles": [],
                        "events": [],
                        "children": [
                            {
                                "elementType": "LAYOUT_CELL",
                                "attributes": [],
                                "styles": [],
                                "events": [],
                                "children": [
                                    {
                                        "elementType": "BUTTON",
                                        "attributes": [
                                            {
                                                "name": "fullWidth",
                                                "type": "STATIC",
                                                "valueType": "BOOLEAN",
                                                "content": true
                                            }
                                        ],
                                        "events": [
                                            {
                                                "name": "onClick",
                                                "type": "ON_CLICK",
                                                "eventItems": [
                                                    {
                                                        "name": "FUNCTION_CALL",
                                                        "functionName": "handleLogin"
                                                    }
                                                ]
                                            }
                                        ],
                                        "children": [
                                            "ورود"
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "elementType": "LAYOUT_ROW",
                        "attributes": [],
                        "styles": [],
                        "events": [],
                        "children": [
                            {
                                "elementType": "LAYOUT_CELL",
                                "attributes": [],
                                "styles": [],
                                "events": [],
                                "children": [
                                    {
                                        "elementType": "HYPER_LINK",
                                        "attributes": [
                                            {
                                                "name": "href",
                                                "type": "STATIC",
                                                "valueType": "STRING",
                                                "content": "/forgot-password"
                                            },
                                            {
                                                "name": "align",
                                                "type": "STATIC",
                                                "valueType": "STRING",
                                                "content": "center"
                                            }
                                        ],
                                        "styles": [],
                                        "events": [],
                                        "children": [
                                            "فراموشی رمز عبور؟"
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ]
    },
    "messages": [
        {
            "content": "برای ایجاد یک کامپوننت لاگین که شامل ورودی نام کاربری، رمز عبور و گزینه فراموشی رمز باشد، از عناصر مجاز استفاده می‌کنیم. در اینجا کد پیشنهادی ارائه شده است:\n\n```jsx\nimport React, { useState } from \"react\";\nimport { FORM_LOADER, LAYOUT, LAYOUT_ROW, LAYOUT_CELL, TEXT_BOX, BUTTON, HYPER_LINK, TYPOGRAPHY } from \"your-component-library\";\n\nconst LoginComponent = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleLogin = () => {\n    // اینجا می‌توانید لاجیک لاگین را اضافه کنید\n    console.log(\"نام کاربری:\", username);\n    console.log(\"رمز عبور:\", password);\n  };\n\n  return (\n    <FORM_LOADER>\n      <LAYOUT>\n        <LAYOUT_ROW>\n          <LAYOUT_CELL>\n            <TYPOGRAPHY variant=\"h5\" align=\"center\">\n              ورود به حساب کاربری\n            </TYPOGRAPHY>\n          </LAYOUT_CELL>\n        </LAYOUT_ROW>\n        <LAYOUT_ROW>\n          <LAYOUT_CELL>\n            <TEXT_BOX\n              label=\"نام کاربری\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              fullWidth\n            />\n          </LAYOUT_CELL>\n        </LAYOUT_ROW>\n        <LAYOUT_ROW>\n          <LAYOUT_CELL>\n            <TEXT_BOX\n              label=\"رمز عبور\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              fullWidth\n            />\n          </LAYOUT_CELL>\n        </LAYOUT_ROW>\n        <LAYOUT_ROW>\n          <LAYOUT_CELL>\n            <BUTTON onClick={handleLogin} fullWidth>\n              ورود\n            </BUTTON>\n          </LAYOUT_CELL>\n        </LAYOUT_ROW>\n        <LAYOUT_ROW>\n          <LAYOUT_CELL>\n            <HYPER_LINK href=\"/forgot-password\" align=\"center\">\n              فراموشی رمز عبور؟\n            </HYPER_LINK>\n          </LAYOUT_CELL>\n        </LAYOUT_ROW>\n      </LAYOUT>\n    </FORM_LOADER>\n  );\n};\n\nexport default LoginComponent;\n```\n\n### توضیحات:\n1. **LAYOUT و LAYOUT_ROW و LAYOUT_CELL**: برای ساختاردهی صفحه استفاده شده است.\n2. **TEXT_BOX**: برای ورودی نام کاربری و رمز عبور.\n3. **BUTTON**: برای دکمه ورود.\n4. **HYPER_LINK**: برای لینک فراموشی رمز عبور.\n5. **FORM_LOADER**: برای مدیریت فرم و ارسال داده‌ها.\n\nاین کامپوننت کاملاً ماژولار و قابل استفاده مجدد است.",
            "additional_kwargs": {
                "refusal": null
            },
            "response_metadata": {
                "token_usage": {
                    "completion_tokens": 605,
                    "prompt_tokens": 2222,
                    "total_tokens": 2827,
                    "completion_tokens_details": {
                        "accepted_prediction_tokens": 0,
                        "audio_tokens": 0,
                        "reasoning_tokens": 0,
                        "rejected_prediction_tokens": 0
                    },
                    "prompt_tokens_details": {
                        "audio_tokens": 0,
                        "cached_tokens": 0
                    }
                },
                "model_name": "gpt-4o-2024-11-20",
                "system_fingerprint": "fp_ee1d74bde0",
                "finish_reason": "stop",
                "logprobs": null
            },
            "type": "ai",
            "name": null,
            "id": "run-edb68699-a04d-4386-974b-6bc26ae6c59d-0",
            "example": false,
            "tool_calls": [],
            "invalid_tool_calls": [],
            "usage_metadata": {
                "input_tokens": 2222,
                "output_tokens": 605,
                "total_tokens": 2827,
                "input_token_details": {
                    "audio": 0,
                    "cache_read": 0
                },
                "output_token_details": {
                    "audio": 0,
                    "reasoning": 0
                }
            }
        }
    ]
}